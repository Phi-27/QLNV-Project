// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLNV.Models;

#nullable disable

namespace QLNV.Migrations
{
    [DbContext(typeof(QlnvContext))]
    partial class QlnvContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QLNV.Models.AccessLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<int?>("AccessPointId")
                        .HasColumnType("int")
                        .HasColumnName("AccessPointID");

                    b.Property<string>("AccessResult")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccessStatus")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("AccessTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AccessType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("LogId")
                        .HasName("PK__AccessLo__5E5499A83336688F");

                    b.HasIndex("AccessPointId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AccessLogs");
                });

            modelBuilder.Entity("QLNV.Models.AccessPoint", b =>
                {
                    b.Property<int>("AccessPointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccessPointID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessPointId"));

                    b.Property<string>("AccessName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DeviceData")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("SiteID");

                    b.HasKey("AccessPointId")
                        .HasName("PK__AccessPo__465A28479C84710F");

                    b.HasIndex("SiteId");

                    b.ToTable("AccessPoints");
                });

            modelBuilder.Entity("QLNV.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int?>("AccessPointId")
                        .HasColumnType("int")
                        .HasColumnName("AccessPointID");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("MemberCard")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04FF11F8BBBD3");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("QLNV.Models.Site", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SiteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiteId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SiteName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SiteId")
                        .HasName("PK__Sites__B9DCB903FC9BB3E5");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("QLNV.Models.AccessLog", b =>
                {
                    b.HasOne("QLNV.Models.AccessPoint", "AccessPoint")
                        .WithMany("AccessLogs")
                        .HasForeignKey("AccessPointId")
                        .HasConstraintName("FK_AccessLogs_AccessPoints");

                    b.HasOne("QLNV.Models.Employee", "Employee")
                        .WithMany("AccessLogs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_AccessLogs_Employees");

                    b.Navigation("AccessPoint");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("QLNV.Models.AccessPoint", b =>
                {
                    b.HasOne("QLNV.Models.Site", "Site")
                        .WithMany("AccessPoints")
                        .HasForeignKey("SiteId")
                        .HasConstraintName("FK_AccessPoints_Sites");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("QLNV.Models.AccessPoint", b =>
                {
                    b.Navigation("AccessLogs");
                });

            modelBuilder.Entity("QLNV.Models.Employee", b =>
                {
                    b.Navigation("AccessLogs");
                });

            modelBuilder.Entity("QLNV.Models.Site", b =>
                {
                    b.Navigation("AccessPoints");
                });
#pragma warning restore 612, 618
        }
    }
}
